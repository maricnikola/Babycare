package test;
import com.ftn.sbnz.model.models.Baby;
import com.ftn.sbnz.model.models.Examination;
import com.ftn.sbnz.model.models.Diagnosis;
import com.ftn.sbnz.model.dtos.ExaminationDTO;
import com.ftn.sbnz.model.models.enums.VaccinationType;
import com.ftn.sbnz.model.models.Symptom
import com.ftn.sbnz.model.models.enums.SymptomName
import com.ftn.sbnz.model.models.Vaccination
import java.time.LocalDate
import java.util.ArrayList;



rule "Second Dose Euvax B and BCG After 1 Month"
when
    $b: Baby()
    $e: Examination(symptoms.isEmpty() && getAgeAtExamDays() >= 29 && getAgeAtExamDays() <= 31)
then
    Vaccination vaccination = new Vaccination(null, VaccinationType.EUVAX_B, LocalDate.now(), 2);
    java.util.List<Vaccination> updated = new java.util.ArrayList<>($b.getVaccinations());
    updated.add(vaccination);
//    insert(vaccination)
    modify($b){ setVaccinations(updated) }

    System.out.println("Baby " + $b.firstName + " " + $b.lastName + " is ready for second dose of Euvax B vaccination.");
end

rule "First Dose Pentaximm and First Dose Sinflorix After 2 Months"
when
    $b: Baby()
    $e: Examination(symptoms.isEmpty() && getAgeAtExamDays() >= 59 && getAgeAtExamDays() <= 61)
then
    Vaccination vaccination = new Vaccination(null, VaccinationType.EUVAX_B, LocalDate.now(), 2);
    java.util.List<Vaccination> updated = new java.util.ArrayList<>($b.getVaccinations());
    updated.add(vaccination);
    modify($b){ setVaccinations(updated) }

    System.out.println("Baby " + $b.firstName + " " + $b.lastName + " is ready for second dose of Euvax B vaccination.");
end

rule "Second Dose Pentaxim after 3 Months"
when
    $b: Baby()
    $e: Examination(symptoms.isEmpty() && getAgeAtExamDays() >= 99 && getAgeAtExamDays() <= 101)
then
    Vaccination vaccination = new Vaccination(null, VaccinationType.EUVAX_B, LocalDate.now(), 2);
    java.util.List<Vaccination> updated = new java.util.ArrayList<>($b.getVaccinations());
    updated.add(vaccination);
    modify($b){ setVaccinations(updated) }

    System.out.println("Baby " + $b.firstName + " " + $b.lastName + " is ready for second dose of Euvax B vaccination.");
end

rule "Third Dose Pentaxim and Second Dose Sinflorix After 5 Months"
when
    $b: Baby()
    $e: Examination(symptoms.isEmpty() && getAgeAtExamDays() >= 139 && getAgeAtExamDays() <= 141)
then
    Vaccination vaccination = new Vaccination(null, VaccinationType.EUVAX_B, LocalDate.now(), 2);
    java.util.List<Vaccination> updated = new java.util.ArrayList<>($b.getVaccinations());
    updated.add(vaccination);
    modify($b){ setVaccinations(updated) }

    System.out.println("Baby " + $b.firstName + " " + $b.lastName + " is ready for second dose of Euvax B vaccination.");
end

rule "Third Dose Euvax B After 6 Months"
when
    $b: Baby()
    $e: Examination(symptoms.isEmpty() && getAgeAtExamDays() >= 179 && getAgeAtExamDays() <= 181)
then
    Vaccination vaccination = new Vaccination(null, VaccinationType.EUVAX_B, LocalDate.now(), 2);
    java.util.List<Vaccination> updated = new java.util.ArrayList<>($b.getVaccinations());
    updated.add(vaccination);
    modify($b){ setVaccinations(updated) }

    System.out.println("Baby " + $b.firstName + " " + $b.lastName + " is ready for second dose of Euvax B vaccination.");
end


rule "Possible Bronchiolitis Detection"
when
    $e: Examination($symptoms : symptoms)
    $totalWeight : Number(intValue > 7) from accumulate(
        Symptom($w : weight,
                name == SymptomName.MILD_FEVER ||
                name == SymptomName.MODERATE_FEVER ||
                name == SymptomName.TACHYCARDIA ||
                name == SymptomName.COUGH ||
                name == SymptomName.WHEEZING ||
                name == SymptomName.CHEST_PAIN ||
                name == SymptomName.FATIGUE ||
                name == SymptomName.DYSPNEA)
        from $symptoms,
        sum($w)
    )
then
    System.out.println("Possible Bronchiolitis detected");
end

rule "Possible Pneumonia Detection"
when
    $e: Examination($symptoms : symptoms)
    $totalWeight : Number(intValue > 7) from accumulate(
        Symptom($w : weight,
                name == SymptomName.HIGH_FEVER ||
                name == SymptomName.TACHYCARDIA ||
                name == SymptomName.COUGH ||
                name == SymptomName.CHEST_PAIN ||
                name == SymptomName.FATIGUE ||
                name == SymptomName.DYSPNEA ||
                name == SymptomName.PALE_SKIN ||
                name == SymptomName.APPETITE_LOSS ||
                name == SymptomName.VOMITING)
        from $symptoms,
        sum($w)
    )
then
    System.out.println("Possible Pneumonia detected");
end

rule "Possible Astma Detection"
when
    $e: Examination($symptoms : symptoms)
    $totalWeight : Number(intValue > 7) from accumulate(
        Symptom($w : weight,
                name == SymptomName.COUGH ||
                name == SymptomName.DYSPNEA ||
                name == SymptomName.WHEEZING ||
                name == SymptomName.PROLONGED_EXPIRATION)
        from $symptoms,
        sum($w)
    )
then
    System.out.println("Possible Astma detected");
end

rule "Possible Anemia Detection"
when
    $e: Examination($symptoms : symptoms)
    $totalWeight : Number(intValue > 7) from accumulate(
        Symptom($w : weight,
                name == SymptomName.APPETITE_LOSS ||
                name == SymptomName.FATIGUE ||
                name == SymptomName.PALE_SKIN ||
                name == SymptomName.TACHYCARDIA)
        from $symptoms,
        sum($w)
    )
then
    System.out.println("Possible Anemia detected");
end

